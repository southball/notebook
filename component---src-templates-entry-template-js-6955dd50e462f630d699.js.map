{"version":3,"sources":["webpack:///./src/templates/entry-template.js"],"names":["Template","pageContext","data","console","log","entry","frontmatter","html","parent","parentEntry","title","className","to","id","dangerouslySetInnerHTML","__html","relatedEntries","edges","length","map","node","key","childrenEntries","pageQuery"],"mappings":"2FAAA,sJAKe,SAASA,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,YAAaC,EAAQ,EAARA,KAC9CC,QAAQC,IAAIF,EAAMD,GADoC,MAExBC,EAAKG,MAA3BC,EAF8C,EAE9CA,YAAaC,EAFiC,EAEjCA,KACfC,EAASN,EAAKO,YACpB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOJ,EAAYI,QACxB,yBAAKC,UAAU,mBACb,yBAAKA,UAAU,iBACb,4BAAKL,EAAYI,OAEfF,EACI,sCAEA,kBAAC,IAAD,CAAMI,GAAI,UAAYJ,EAAOF,YAAYO,IAAKL,EAAOF,YAAYI,QAEjE,qCAEN,yBACEC,UAAU,wBACVG,wBAAyB,CAAEC,OAAQR,KAGnCL,EAAKc,eAAeC,MAAMC,OACtB,oCACA,gDACA,4BACGhB,EAAKc,eAAeC,MAAME,KAAI,gBAAWb,EAAX,EAAGc,KAAQd,YAAX,OAC7B,wBAAIe,IAAKf,EAAYO,IACnB,kBAAC,IAAD,CAAMD,GAAI,UAAYN,EAAYO,IAAKP,EAAYI,aAKzD,qCAGJR,EAAKoB,gBAAgBL,MAAMC,OACvB,oCACA,iDACA,4BACGhB,EAAKoB,gBAAgBL,MAAME,KAAI,gBAAWb,EAAX,EAAGc,KAAQd,YAAX,OAC9B,wBAAIe,IAAKf,EAAYO,IACrB,kBAAC,IAAD,CAAMD,GAAI,UAAYN,EAAYO,IAAKP,EAAYI,aAKvD,wCAQT,IAAMa,EAAS","file":"component---src-templates-entry-template-js-6955dd50e462f630d699.js","sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nexport default function Template({ pageContext, data }) {\n  console.log(data, pageContext);\n  const { frontmatter, html } = data.entry;\n  const parent = data.parentEntry;\n  return (\n    <Layout>\n      <SEO title={frontmatter.title} />\n      <div className=\"entry-container\">\n        <div className=\"entry content\">\n          <h1>{frontmatter.title}</h1>\n          {\n            parent\n              ? <p>\n                Parent:&nbsp;\n                <Link to={\"/entry/\" + parent.frontmatter.id}>{parent.frontmatter.title}</Link>\n              </p>\n              : <></>\n          }\n          <div\n            className=\"entry-content content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n          {\n            data.relatedEntries.edges.length\n              ? <>\n                <h2>Related Concepts</h2>\n                <ul>\n                  {data.relatedEntries.edges.map(({ node: { frontmatter } }) => (\n                    <li key={frontmatter.id}>\n                      <Link to={\"/entry/\" + frontmatter.id}>{frontmatter.title}</Link>\n                    </li>\n                  ))}\n                </ul>\n              </>\n              : <></>\n          }\n          {\n            data.childrenEntries.edges.length\n              ? <>\n                <h2>Children Concepts</h2>\n                <ul>\n                  {data.childrenEntries.edges.map(({ node: { frontmatter }}) => (\n                    <li key={frontmatter.id}>\n                    <Link to={\"/entry/\" + frontmatter.id}>{frontmatter.title}</Link>\n                    </li>\n                  ))}\n                </ul>\n              </>\n              : <></>\n          }\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query($id: String!, $parentId: String, $related: [String]) {\n    entry: markdownRemark(frontmatter: { id: { eq: $id } }) {\n      html\n      frontmatter {\n        title\n        related\n      }\n    }\n    \n    childrenEntries: allMarkdownRemark(filter: {frontmatter: {parent: {eq: $id}}}) {\n      edges {\n        node {\n          frontmatter {\n            title\n            id\n          }\n        }\n      }\n    }\n    \n    relatedEntries: allMarkdownRemark(filter: {frontmatter: {id: {in: $related}}}) {\n      edges {\n        node {\n          frontmatter {\n            title\n            id\n          }\n        }\n      }\n    }\n    \n    parentEntry: markdownRemark(frontmatter: { id: { eq: $parentId } }) {\n      html\n      frontmatter {\n        id\n        title\n      }\n    }\n  }\n`;"],"sourceRoot":""}